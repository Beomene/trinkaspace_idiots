/*
  NOTE: DIORAMAS should be SECTIONS inside the A1 that is a DIV. 
  DIORAMAS should have a class (diorama) and id (their folder-name, such as XXX_XXX_XXX).
*/

:root {
  --bg-color: #202029;
  --debug-outline: 2px dashed cyan;

  /* Trinka color palette */
  --trinka-text: #ACABBB;
  --trinkagrey-dark: #202029;
  --trinkagrey-light: #444444;
  --trinkagrey-red: #A6A4AC;
  --trinkagrey-yellow: #A7A6A9;
  --trinkagrey-green: #A4A6AB;
  --trinkagrey-bright: #A4A6AB;

  --darkblue: #161721;
  --darkpurple: #181621;
  --darkgreen: #161A1D;
  --darkknow: #161621;

  --trinkapurple: #161670;
  --trinkablack: #050011;

  --neoncyan: #2AFFF7;
  --neonteal: #00FFD4;
  --neonpurple: #6A00FF;
}

body {
  margin: 0;
  background: var(--bg-color);
  overflow-x: hidden;
}

#arena1-container {
  position: relative;
  width: 100%;
  /* Height is set dynamically from page.json */
}

.diorama-container {
  position: absolute;
  /* top, left, width, height, z-index are set dynamically from scope.json */
  perspective: 1px; /* Enables 3D space for parallax */
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  will-change: transform;
  backface-visibility: hidden;
  transform: translateZ(0);
  -webkit-font-smoothing: subpixel-antialiased;
}

.natscene {
  position: relative;
  width: 100%;
  height: 100%;
  min-height: 0;
  pointer-events: none; /* Only dimes are interactive */
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  will-change: transform; /* Optimize for transformations */
  transition: transform 0.3s ease; /* Smooth transition for scopeVerticalOffset changes */
}

.natscene > .dime-layer {
  pointer-events: auto;
}

.dime-layer {
  position: absolute;
  left: 50%;
  bottom: 0;
  transform: translateX(-50%);
  width: 2000px;
  will-change: transform;
  backface-visibility: hidden;
  transform: translateZ(0);
  transition: transform 0.08s linear;
  overflow: visible !important;
  clip-path: none !important;
  transform-style: preserve-3d;
  backface-visibility: visible;
}

.dime-layer img {
  display: block;
  width: 100%;
  height: auto;
  object-fit: cover;
}

.debug .diorama-container {
  outline: var(--debug-outline);
}

.dime-layer[style*='--debug-color'] {
  outline: 2px dashed var(--debug-color);
  animation: offenderShake 0.3s;
}

@keyframes offenderShake {
  0%, 100% { transform: translateX(-50%) translateY(0); }
  25% { transform: translateX(-50%) translateY(-3px); }
  75% { transform: translateX(-50%) translateY(3px); }
}

[data-offender] {
  box-shadow: 0 0 0 2px hsl(0, 80%, 50%);
}

/* --- Diorama reveal/fade-in logic --- */
.diorama-hidden {
  opacity: 0;
  pointer-events: none;
  /* transition: opacity 0.6s cubic-bezier(.4,0,.2,1); */ /* Removed transition */
}
.diorama-container:not(.diorama-hidden) {
  opacity: 1;
  pointer-events: auto;
}

/* --- Arena2: Trinka Textbox Styles --- */
.trinka-textbox {
  background: rgba(0, 0, 0, 0.7); /* Pure black at 0.7 opacity */
  color: var(--trinka-text, #ACABBB);
  border-radius: 1em;
  padding: 1.5em 2em;
  margin: 1em 0;
  font-size: 1.2em;
  box-shadow: 0 4px 24px rgba(0,0,0,0.3);
  border: none;
  max-width: 600px;
  line-height: 1.5;
  text-align: left; /* Default to left alignment */
  /* Optional accent border: */
  /* border-left: 4px solid var(--neoncyan); */
}

.trinka-textbox .speaker {
  font-weight: bold;
  color: var(--neoncyan, #2AFFF7);
  margin-bottom: 0.5em;
  display: block;
  letter-spacing: 0.05em;
}

.trinka-textbox {
  background: rgba(0, 0, 0, 0.7); /* Pure black at 0.7 opacity */
  color: var(--trinka-text, #ACABBB);
  border-radius: 10px;
  padding: 1.5em 2em;
  margin: 1em 0;
  font-size: 1.2em;
  box-shadow: 0 4px 24px rgba(0,0,0,0.3);
  border: none;
  max-width: 600px;
  min-width: 120px;
  line-height: 1.5;
  word-break: break-word;
  overflow: visible;
  display: inline-block;
  font-family: 'Noto Sans', Arial, sans-serif;
  text-align: left; /* Default to left alignment */
}

.trinka-textbox.left   { text-align: left;   align-self: flex-start; }
.trinka-textbox.center { text-align: center; align-self: center; }
.trinka-textbox.right  { text-align: right;  align-self: flex-end; }

.trinka-textbox .speaker {
  font-weight: bold;
  color: var(--neoncyan, #2AFFF7);
  margin-bottom: 0.5em;
  display: block;
  letter-spacing: 0.05em;
}

/* Clickable word styling */
.trinka-clickable {
  color: var(--neoncyan, #2AFFF7);
  cursor: pointer;
  text-decoration: underline dotted;
  transition: color 0.2s;
}
.trinka-clickable:hover {
  color: var(--neonpurple, #6A00FF);
}

@import url('https://fonts.googleapis.com/css?family=Noto+Sans:400,700|Noto+Serif:400,700&display=swap');
@font-face {
  font-family: 'OpenDyslexic';
  src: url('/assets/fonts/OpenDyslexic-Regular.otf') format('opentype');
  font-weight: normal;
  font-style: normal;
}

/* --- Arena 3A: Tertiary Arena (Sacred HUD Layer) --- */
.arena3-menu {
  font-family: 'Noto Sans', Arial, sans-serif;
}

.arena3-menu-link {
  position: relative;
}

.arena3-menu-link::before {
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  height: 100%;
  width: 0;
  background: linear-gradient(90deg, rgba(42, 255, 247, 0.1), transparent);
  transition: width 200ms ease;
  border-radius: 8px;
}

.arena3-menu-link:hover::before {
  width: 100%;
}

.arena3-menu-toggle {
  font-family: 'Noto Sans', Arial, sans-serif;
}

/* Fullscreen mode adjustments */
:fullscreen .arena3-menu-toggle {
  top: 1rem;
  left: 1rem;
}

/* Arena layer hierarchy */
/* Arena 1A (Primary): Diorama blocks - z-index 0 to 200 */
/* Arena 2A (Secondary): Text-boxes - z-index 1000 */
.trinka-textbox {
  z-index: 1000;
}

/* Arena 3A (Tertiary): HUD/Menu - z-index 2000+ */
.arena3-menu,
.arena3-overlay,
.arena3-menu-toggle {
  z-index: 2000;
}

/* Debug mode for Arena visibility */
body.debug .arena3-menu {
  border: 2px dashed #6A00FF;
}

body.debug .trinka-textbox {
  border: 2px dashed #2AFFF7;
}

body.debug .diorama-container {
  border: 2px dashed cyan;
}

/* Optimized diorama rendering */
.diorama-container {
  will-change: transform;
  backface-visibility: hidden;
  transform: translateZ(0);
  -webkit-font-smoothing: subpixel-antialiased;
}

.dime-layer {
  will-change: transform;
  backface-visibility: hidden;
  transform: translateZ(0);
  transition: transform 0.08s linear;
}

/* Hidden until fully loaded */
.diorama-container[data-loading="true"] {
  opacity: 0;
}

/* --- Arena 3B: HUD System --- */
#arena3-hud-container {
  pointer-events: none; /* Let clicks pass through by default */
}

.arena3-hud-element {
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
  max-width: 300px;
  overflow: hidden;
}

.arena3-hud-element.interactive {
  pointer-events: auto;
}

/* HUD element animations */
@keyframes hudPulse {
  0% { opacity: 0.7; }
  50% { opacity: 1; }
  100% { opacity: 0.7; }
}

.arena3-hud-element.pulse {
  animation: hudPulse 2s infinite;
}

.arena3-hud-element.fade-in {
  opacity: 0;
  animation: fadeIn 0.3s forwards;
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

/* HUD element themes */
.arena3-hud-element.info {
  border-color: rgba(42, 255, 247, 0.5) !important;
}

.arena3-hud-element.warning {
  border-color: rgba(255, 200, 0, 0.7) !important;
}

.arena3-hud-element.danger {
  border-color: rgba(255, 50, 50, 0.7) !important;
}

.arena3-hud-element.success {
  border-color: rgba(50, 255, 100, 0.7) !important;
}

/* HUD content styling */
.hud-title {
  font-size: 0.9rem;
  font-weight: bold;
  margin-bottom: 0.5rem;
  color: #FFFFFF;
  font-weight: 600;
  letter-spacing: 0.5px;
  padding: 4px 8px;
}

.hud-value {
  font-size: 1.2rem;
  margin-bottom: 0.5rem;
}

.hud-subtitle {
  font-size: 0.8rem;
  opacity: 0.7;
}

/* HUD Counter */
.hud-counter {
  font-weight: 500;
  padding: 4px 8px;
  text-align: right;
}

/* HUD Scroll */
.hud-scroll {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 100%;
}

.progress-text {
  margin-bottom: 4px;
  text-align: center;
  font-size: 0.8rem;
}

.progress-bar {
  background: rgba(0, 0, 0, 0.2);
  height: 4px;
  width: 100%;
  border-radius: 2px;
  overflow: hidden;
}

.progress-fill {
  background: var(--neoncyan);
  height: 100%;
  transition: width 0.2s ease-out;
}

/* HUD Button */
.hud-button {
  background: rgba(42, 255, 247, 0.2);
  border: 1px solid var(--neoncyan);
  color: var(--neoncyan);
  padding: 6px 12px;
  border-radius: 4px;
  cursor: pointer;
  font-family: inherit;
  font-size: 0.8rem;
  transition: all 0.2s ease;
}

.hud-button:hover {
  background: rgba(42, 255, 247, 0.4);
}

.hud-button:active {
  transform: scale(0.98);
}

/* HUD element transitions */
#arena3-hud-container {
  transition: opacity 0.3s ease;
}

/* TRINKATEXT HUD Element */
.trinkatext-container {
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  height: 13vh; /* Set height to 13vh (approximately 250px) */
}

.trinkatext-message {
  font-family: 'Courier New', monospace;
  font-size: 1rem; /* Slightly larger font size */
  line-height: 1.5;
  color: var(--trinka-text);
  overflow-y: auto; /* Add vertical scrolling for longer content */
  margin-bottom: 6px;
  animation: blink-cursor 0.8s step-end infinite;
  max-height: calc(13vh - 20px); /* Allow space for the cyan line */
}

.trinkatext-line {
  height: 1px;
  background: var(--neoncyan);
  margin-top: 4px;
  width: 100%;
  box-shadow: 0 0 4px var(--neoncyan);
}

@keyframes blink-cursor {
  0%, 100% { border-right: 2px solid transparent; }
  50% { border-right: 2px solid var(--neoncyan); }
}

/* Typewriter animation */
@keyframes typewriter {
  from { width: 0; }
  to { width: 100%; }
}

.trinkatext-typing {
  overflow: hidden;
  white-space: nowrap;
  animation: typewriter 3s steps(60, end) forwards;
  border-right: 2px solid var(--neoncyan);
}

/* RTT (Right TrinkaText) styling */
.rtrinkatext-container {
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  height: 13vh;
  direction: rtl; /* For RTL language support */
}

.rtrinkatext-message {
  font-family: 'Noto Sans', 'Noto Sans Arabic', sans-serif;
  font-size: 1rem;
  line-height: 1.5;
  color: var(--trinka-text);
  overflow-y: auto;
  margin-bottom: 6px;
  animation: blink-cursor 0.8s step-end infinite;
  max-height: calc(13vh - 20px);
  text-align: right;
}

.rtrinkatext-line {
  height: 1px;
  background: var(--neoncyan);
  margin-top: 4px;
  width: 100%;
  box-shadow: 0 0 4px var(--neoncyan);
}

.rtrinkatext-typing {
  overflow: hidden;
  white-space: nowrap;
  animation: rtl-typewriter 3s steps(60, end) forwards;
  border-left: 2px solid var(--neoncyan); /* For RTL, the cursor is on the left */
}

/* RTL typewriter animation */
@keyframes rtl-typewriter {
  from { width: 0; }
  to { width: 100%; }
}

/* UTT (Upper TrinkaText) styling */
.utt-container {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  position: relative;
  overflow: hidden;
  border-radius: 50% 50% 50% 50% / 50% 50% 50% 50%;
}

.utt-frame {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: url('/assets/UI/graphics/utt-frame.png');
  background-size: 100% 100%;
  background-repeat: no-repeat;
  pointer-events: none;
  z-index: 2;
}

.utt-glass {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(173, 216, 230, 0.2);
  border-radius: 50%;
  z-index: 1;
  transition: background-color 0.5s ease;
}

.utt-glass.foggy {
  background-color: rgba(255, 255, 255, 0.4);
  backdrop-filter: blur(3px);
}

.utt-message {
  z-index: 3;
  text-align: center;
  font-family: 'Noto Sans', sans-serif;
  font-size: 0.9rem;
  color: var(--trinka-text);
  padding: 10px;
  max-width: 80%;
  text-shadow: 0 0 3px var(--neoncyan);
  transition: color 0.3s ease, opacity 0.3s ease;
}

.utt-crystals {
  position: absolute;
  bottom: 10%;
  width: 80%;
  height: 20%;
  display: flex;
  justify-content: space-around;
  z-index: 4;
}

.utt-crystal {
  width: 15%;
  height: 80%;
  background-color: var(--neoncyan);
  clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);
  transition: background-color 0.5s ease, transform 0.3s ease;
}

/* Emotion colors for UTT */
.emotion-neutral { color: #d5e8f7; }
.emotion-happy { color: #b8e986; }
.emotion-excited { color: #f9e264; }
.emotion-curious { color: #64c9f9; }
.emotion-nervous { color: #f9c064; }
.emotion-embarrassed { color: #f98064; }
.emotion-surprised { color: #d264f9; }
.emotion-sad { color: #6495f9; }
.emotion-thoughtful { color: #9f64f9; }
.emotion-confused { color: #f964e2; }

/* Crystal colors matching emotions */
.crystal-neutral { background-color: #d5e8f7; }
.crystal-happy { background-color: #b8e986; }
.crystal-excited { background-color: #f9e264; }
.crystal-curious { background-color: #64c9f9; }
.crystal-nervous { background-color: #f9c064; }
.crystal-embarrassed { background-color: #f98064; }
.crystal-surprised { background-color: #d264f9; }
.crystal-sad { background-color: #6495f9; }
.crystal-thoughtful { background-color: #9f64f9; }
.crystal-confused { background-color: #f964e2; }

/* Crystal animation for different emotions */
@keyframes pulse {
  0% { transform: scale(1); }
  50% { transform: scale(1.1); }
  100% { transform: scale(1); }
}

.utt-crystal.pulse {
  animation: pulse 2s infinite;
}

/* Beat System CSS - For narrative pauses */

/* Beat Overlay - Base */
.beat-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 1000;
  transition: background 0.5s ease, backdrop-filter 0.5s ease;
}

/* Hard Beat - Tension, focus, and emotional impact */
.beat-overlay.hard-beat {
  background-color: rgba(0, 0, 0, 0.3);
  backdrop-filter: saturate(70%);
  pointer-events: auto; /* Block clicks during hard beat */
}

/* Normal Beat - Natural rhythm, thoughtful pauses */
.beat-overlay.normal-beat {
  background-color: rgba(0, 0, 0, 0.15);
  backdrop-filter: saturate(85%);
}

/* Soft Beat - Contemplation, appreciation, rest */
.beat-overlay.soft-beat {
  background-color: rgba(255, 255, 255, 0.05);
  backdrop-filter: brightness(105%);
}

/* UTT Effects during beats */
.utt-crystal.intensify {
  transform: scale(1.2);
  filter: brightness(120%);
  animation: pulse 0.8s infinite alternate;
}

/* Eternity Mode Button */
.eternity-mode-button {
  position: fixed;
  bottom: 20px;
  right: 20px;
  background-color: rgba(255, 255, 255, 0.2);
  border: 1px solid rgba(255, 255, 255, 0.5);
  padding: 8px 12px;
  border-radius: 20px;
  cursor: pointer;
  transition: all 0.3s ease;
  z-index: 1001;
  color: white;
  font-family: 'Noto Sans', sans-serif;
  font-size: 14px;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
}

.eternity-mode-button:hover {
  background-color: rgba(255, 255, 255, 0.4);
}

.eternity-mode-button.active {
  background-color: rgba(255, 255, 255, 0.3);
  box-shadow: 0 0 15px rgba(255, 255, 255, 0.3);
}

/* Viewport breathing effect for soft beats */
@keyframes viewport-breathing {
  0% { transform: scale(1); }
  50% { transform: scale(1.02); }
  100% { transform: scale(1); }
}

body.viewport-breathing .arena1-container {
  animation: viewport-breathing 8s infinite ease-in-out;
  transform-origin: center center;
}

/* Reader settings for controlling beat duration */
.beat-settings-panel {
  position: fixed;
  bottom: 20px;
  left: 20px;
  padding: 15px;
  background-color: rgba(0, 0, 0, 0.7);
  border-radius: 10px;
  z-index: 1001;
  color: white;
  font-family: 'Noto Sans', sans-serif;
  display: none;
  transition: all 0.3s ease;
}

.beat-settings-panel.visible {
  display: block;
}

.beat-settings-panel h4 {
  margin: 0 0 10px 0;
  font-size: 16px;
}

.beat-settings-panel label {
  display: block;
  margin-bottom: 8px;
  font-size: 14px;
}

.beat-settings-panel input[type="range"] {
  -webkit-appearance: none;
  appearance: none;
  width: 100%;
  height: 4px;
  background: rgba(255, 255, 255, 0.2);
  border-radius: 2px;
  outline: none;
}

.beat-settings-panel input[type="range"]::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  width: 16px;
  height: 16px;
  background: var(--neoncyan);
  cursor: pointer;
  border-radius: 50%;
  box-shadow: 0 0 4px var(--neoncyan);
}

.beat-settings-panel input[type="range"]::-moz-range-thumb {
  width: 16px;
  height: 16px;
  background: var(--neoncyan);
  cursor: pointer;
  border-radius: 50%;
  box-shadow: 0 0 4px var(--neoncyan);
}

/* Beat duration labels */
.beat-settings-panel .duration-label {
  font-size: 14px;
  margin-top: 10px;
  text-align: center;
}

/* Active beat indicator */
.active-beat {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  pointer-events: none;
  z-index: 1000;
}

.active-beat .beat-overlay {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  pointer-events: none;
  z-index: 1000;
}

.active-beat.hard-beat .beat-overlay {
  background-color: rgba(255, 0, 0, 0.3);
}

.active-beat.normal-beat .beat-overlay {
  background-color: rgba(255, 255, 0, 0.3);
}

.active-beat.soft-beat .beat-overlay {
  background-color: rgba(0, 255, 0, 0.3);
}

/* Narrative elements */
.narrative-container {
  position: relative;
  width: 100%;
  height: 100%;
  overflow: hidden;
}

.narrative-element {
  position: absolute;
  white-space: nowrap;
  opacity: 0;
  transform: translateY(10px);
  transition: opacity 0.4s ease, transform 0.4s ease;
}

.narrative-element.visible {
  opacity: 1;
  transform: translateY(0);
}

/* Narrative text styling */
.narrative-text {
  font-family: 'Noto Sans', sans-serif;
  font-size: 1rem;
  color: var(--trinka-text);
  padding: 10px;
  border-radius: 4px;
  background: rgba(0, 0, 0, 0.7);
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
}

/* Narrative image styling */
.narrative-image {
  max-width: 100%;
  height: auto;
  border-radius: 4px;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
}

/* Scene transition effects */
.scene-enter {
  opacity: 0;
  transform: translateY(10px);
}

.scene-enter-active {
  opacity: 1;
  transform: translateY(0);
  transition: opacity 0.4s ease, transform 0.4s ease;
}

.scene-exit {
  opacity: 1;
  transform: translateY(0);
}

.scene-exit-active {
  opacity: 0;
  transform: translateY(-10px);
  transition: opacity 0.4s ease, transform 0.4s ease;
}

/* Miscellaneous */
.hidden {
  display: none !important;
}

.visible {
  display: block !important;
}

.pointer-events-none {
  pointer-events: none;
}

.pointer-events-auto {
  pointer-events: auto;
}

.no-scroll {
  overflow: hidden;
}

.scroll-auto {
  overflow: auto;
}

.fade-in {
  animation: fadeIn 0.3s forwards;
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

/* Custom scrollbar styles */
::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

::-webkit-scrollbar-thumb {
  background: var(--neoncyan);
  border-radius: 4px;
}

::-webkit-scrollbar-track {
  background: rgba(255, 255, 255, 0.1);
}

/* Enable independent local scrolling for each diorama or scrollable area */
.local-scroll {
  overflow-y: auto;
  overflow-x: hidden;
  width: 100%;
  height: 100%;
  max-height: 100%;
  -webkit-overflow-scrolling: touch;
}

/* End of CSS */